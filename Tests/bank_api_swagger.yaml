openapi: 3.0.1
info:
  title: The ParaBank REST OpenAPI
  description: This OpenAPI provides access to various ParaBank internal operations
  termsOfService: /parabank/about.htm
  contact:
    name: ParaBank Web Administrator
    url: http://www.parasoft.com
    email: webadmin@parabank.parasoft.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: 3.0.0
servers:
- url: /parabank/services/bank
tags:
- name: Accounts
  description: account centric operations
- name: Customers
  description: customer centric operations
- name: Database
  description: data management operations
- name: JMS
  description: message service operations
- name: Loans
  description: request loan operations
- name: Misc
  description: miscelaneous operations
- name: Positions
  description: stock centric operations
- name: Transactions
  description: banking transactions centric operations
paths:
  /billpay:
    post:
      tags:
      - Accounts
      summary: Pay bill
      operationId: billPay
      parameters:
      - name: accountId
        in: query
        description: Bill payment source account
        required: true
        schema:
          type: integer
          format: int32
      - name: amount
        in: query
        description: Amount
        required: true
        schema:
          type: number
      requestBody:
        description: Payee
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payee"
          application/xml:
            schema:
              $ref: "#/components/schemas/Payee"
        required: true
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/BillPayResult"
            application/json:
              schema:
                $ref: "#/components/schemas/BillPayResult"
  /customers/{customerId}/buyPosition:
    post:
      tags:
      - Positions
      summary: Buy a Position
      operationId: buyPosition
      parameters:
      - name: customerId
        in: path
        description: Customer's id
        required: true
        schema:
          type: integer
          format: int32
      - name: accountId
        in: query
        description: Customer funds source account
        required: true
        schema:
          type: integer
          format: int32
      - name: name
        in: query
        description: Instrument's Name
        required: true
        schema:
          type: string
      - name: symbol
        in: query
        description: Instrument's exchange symbol
        required: true
        schema:
          type: string
      - name: shares
        in: query
        description: number of shares
        required: true
        schema:
          type: integer
          format: int32
      - name: pricePerShare
        in: query
        description: Price of each share
        required: true
        schema:
          type: number
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Position"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Position"
  /cleanDB:
    post:
      tags:
      - Database
      summary: Clean the Database
      operationId: cleanDB
      responses:
        default:
          description: default response
          content:
            application/xml: {}
            application/json: {}
  /createAccount:
    post:
      tags:
      - Customers
      - Accounts
      summary: Create a new account
      operationId: createAccount
      parameters:
      - name: customerId
        in: query
        description: Customer's id
        required: true
        schema:
          type: integer
          format: int32
      - name: newAccountType
        in: query
        description: "Account type (CHECKING, SAVINGS, LOAN)"
        required: true
        schema:
          type: integer
          format: int32
      - name: fromAccountId
        in: query
        description: Customer funds source account
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/Account"
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
  /deposit:
    post:
      tags:
      - Accounts
      summary: Deposit funds
      operationId: deposit
      parameters:
      - name: accountId
        in: query
        description: Customer funds target account
        required: true
        schema:
          type: integer
          format: int32
      - name: amount
        in: query
        description: Amount
        required: true
        schema:
          type: number
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
  /accounts/{accountId}:
    get:
      tags:
      - Accounts
      summary: Get Account by Id
      operationId: getAccount
      parameters:
      - name: accountId
        in: path
        description: Account id
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/Account"
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
  /customers/{customerId}/accounts:
    get:
      tags:
      - Customers
      - Accounts
      summary: Get Customer Accounts
      operationId: getAccounts
      parameters:
      - name: customerId
        in: path
        description: Customer's id
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
  /customers/{customerId}:
    get:
      tags:
      - Customers
      summary: Get Customer Details
      operationId: getCustomer
      parameters:
      - name: customerId
        in: path
        description: Customer's id
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/Customer"
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
  /positions/{positionId}:
    get:
      tags:
      - Positions
      summary: Get Position by id
      operationId: getPosition
      parameters:
      - name: positionId
        in: path
        description: Unique identifier for the position
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/Position"
            application/json:
              schema:
                $ref: "#/components/schemas/Position"
  /positions/{positionId}/{startDate}/{endDate}:
    get:
      tags:
      - Positions
      summary: Get Position history by id within a date range
      operationId: getPositionHistory
      parameters:
      - name: positionId
        in: path
        description: Unique identifier for the position
        required: true
        schema:
          type: integer
          format: int32
      - name: startDate
        in: path
        description: Search starting date
        required: true
        schema:
          type: string
      - name: endDate
        in: path
        description: Search ending date
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HistoryPoint"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HistoryPoint"
  /customers/{customerId}/positions:
    get:
      tags:
      - Customers
      - Positions
      summary: Get Positions for Customer
      operationId: getPositions
      parameters:
      - name: customerId
        in: path
        description: Customer's id
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Position"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Position"
  /transactions/{transactionId}:
    get:
      tags:
      - Transactions
      summary: Get the transaction for the id
      operationId: getTransaction
      parameters:
      - name: transactionId
        in: path
        description: Unique identifier for the transaction
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/Transaction"
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
  /accounts/{accountId}/transactions:
    get:
      tags:
      - Accounts
      - Transactions
      summary: Get the list of Transactions for the account
      operationId: getTransactions
      parameters:
      - name: accountId
        in: path
        description: Account id
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
  /accounts/{accountId}/transactions/amount/{amount}:
    get:
      tags:
      - Accounts
      - Transactions
      summary: Create transactions by amount for account
      operationId: getTransactionsByAmount
      parameters:
      - name: accountId
        in: path
        description: Account id
        required: true
        schema:
          type: integer
          format: int32
      - name: amount
        in: path
        description: Amount
        required: true
        schema:
          type: number
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
  /accounts/{accountId}/transactions/month/{month}/type/{type}:
    get:
      tags:
      - Accounts
      - Transactions
      summary: Fetch transactions by month and type for account
      operationId: getTransactionsByMonthAndType
      parameters:
      - name: accountId
        in: path
        description: Account id
        required: true
        schema:
          type: integer
          format: int32
      - name: month
        in: path
        description: Month to use for the search range
        required: true
        schema:
          type: string
      - name: type
        in: path
        description: "Transaction type (CREDIT, DEBIT)"
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
  /accounts/{accountId}/transactions/fromDate/{fromDate}/toDate/{toDate}:
    get:
      tags:
      - Accounts
      - Transactions
      summary: Fetch transactions for date range for account
      operationId: getTransactionsByToFromDate
      parameters:
      - name: accountId
        in: path
        description: Account id
        required: true
        schema:
          type: integer
          format: int32
      - name: fromDate
        in: path
        description: Search starting date
        required: true
        schema:
          type: string
      - name: toDate
        in: path
        description: Search ending date
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
  /accounts/{accountId}/transactions/onDate/{onDate}:
    get:
      tags:
      - Accounts
      - Transactions
      summary: Fetch transactions for a specific date for account
      operationId: getTransactionsOnDate
      parameters:
      - name: accountId
        in: path
        description: Account id
        required: true
        schema:
          type: integer
          format: int32
      - name: onDate
        in: path
        description: Search specific date
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
  /initializeDB:
    post:
      tags:
      - Database
      summary: Initialize the Database
      operationId: initializeDB
      responses:
        default:
          description: default response
          content:
            application/xml: {}
            application/json: {}
  /login/{username}/{password}:
    get:
      tags:
      - Misc
      summary: Login (john/demo)
      operationId: login
      parameters:
      - name: username
        in: path
        description: Customer's user name
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: Customer's password
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/Customer"
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
  /requestLoan:
    post:
      tags:
      - Loans
      summary: Request a loan
      operationId: requestLoan
      parameters:
      - name: customerId
        in: query
        description: Customer's id
        required: true
        schema:
          type: integer
          format: int32
      - name: amount
        in: query
        description: Amount
        required: true
        schema:
          type: number
      - name: downPayment
        in: query
        description: Downpayment for the loan
        required: true
        schema:
          type: number
      - name: fromAccountId
        in: query
        description: Customer funds source account
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/LoanResponse"
            application/json:
              schema:
                $ref: "#/components/schemas/LoanResponse"
  /customers/{customerId}/sellPosition:
    post:
      tags:
      - Positions
      summary: Sell a Position
      operationId: sellPosition
      parameters:
      - name: customerId
        in: path
        description: Customer's id
        required: true
        schema:
          type: integer
          format: int32
      - name: accountId
        in: query
        description: Customer funds target account
        required: true
        schema:
          type: integer
          format: int32
      - name: positionId
        in: query
        description: Unique identifier for the position
        required: true
        schema:
          type: integer
          format: int32
      - name: shares
        in: query
        description: number of shares
        required: true
        schema:
          type: integer
          format: int32
      - name: pricePerShare
        in: query
        description: Price of each share
        required: true
        schema:
          type: number
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Position"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Position"
  /setParameter/{name}/{value}:
    post:
      tags:
      - Misc
      summary: Set Parameters
      operationId: setParameter
      parameters:
      - name: name
        in: path
        description: Parameter Name
        required: true
        schema:
          type: string
      - name: value
        in: path
        description: Parameter Value
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/xml: {}
            application/json: {}
  /shutdownJmsListener:
    post:
      tags:
      - JMS
      summary: Stop JMS Listener
      operationId: shutdownJmsListener
      responses:
        default:
          description: default response
          content:
            application/xml: {}
            application/json: {}
  /startupJmsListener:
    post:
      tags:
      - JMS
      summary: Start JMS Listener
      operationId: startupJmsListener
      responses:
        default:
          description: default response
          content:
            application/xml: {}
            application/json: {}
  /transfer:
    post:
      tags:
      - Accounts
      summary: Transfer funds
      operationId: transfer
      parameters:
      - name: fromAccountId
        in: query
        description: Customer funds source account
        required: true
        schema:
          type: integer
          format: int32
      - name: toAccountId
        in: query
        description: Customer funds target account
        required: true
        schema:
          type: integer
          format: int32
      - name: amount
        in: query
        description: Amount
        required: true
        schema:
          type: number
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
  /customers/update/{customerId}:
    post:
      tags:
      - Customers
      summary: Update customer information
      operationId: updateCustomer
      parameters:
      - name: customerId
        in: path
        description: Customer's id
        required: true
        schema:
          type: integer
          format: int32
      - name: firstName
        in: query
        description: Customer's given (first) name
        required: true
        schema:
          type: string
      - name: lastName
        in: query
        description: Customer's surname (last name)
        required: true
        schema:
          type: string
      - name: street
        in: query
        description: Street Address including bilding number and apartment (if any)
        required: true
        schema:
          type: string
      - name: city
        in: query
        description: City
        required: true
        schema:
          type: string
      - name: state
        in: query
        description: US state or Region name
        required: true
        schema:
          type: string
      - name: zipCode
        in: query
        description: ZIP code or province id
        required: true
        schema:
          type: string
      - name: phoneNumber
        in: query
        description: Contact Phone Number
        required: true
        schema:
          type: string
      - name: ssn
        in: query
        description: Social Security Number
        required: true
        schema:
          type: string
      - name: username
        in: query
        description: Customer's user name
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: Customer's password
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
  /withdraw:
    post:
      tags:
      - Accounts
      summary: Withdraw funds
      operationId: withdraw
      parameters:
      - name: accountId
        in: query
        description: Customer funds source account
        required: true
        schema:
          type: integer
          format: int32
      - name: amount
        in: query
        description: Amount
        required: true
        schema:
          type: number
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
components:
  schemas:
    BillPayResult:
      type: object
      properties:
        payeeName:
          type: string
        amount:
          type: number
        accountId:
          type: integer
          format: int32
      xml:
        name: billPayResult
    Address:
      type: object
      properties:
        street:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
    Payee:
      type: object
      properties:
        name:
          type: string
        address:
          $ref: "#/components/schemas/Address"
        phoneNumber:
          type: string
        accountNumber:
          type: integer
          format: int32
    Position:
      type: object
      properties:
        positionId:
          type: integer
          format: int32
        customerId:
          type: integer
          format: int32
        name:
          type: string
        symbol:
          type: string
        shares:
          type: integer
          format: int32
        purchasePrice:
          type: number
      xml:
        name: position
    Account:
      type: object
      properties:
        id:
          type: integer
          format: int32
        customerId:
          type: integer
          format: int32
        type:
          type: string
          enum:
          - CHECKING
          - SAVINGS
          - LOAN
        balance:
          type: number
      xml:
        name: account
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        address:
          $ref: "#/components/schemas/Address"
        phoneNumber:
          type: string
        ssn:
          type: string
      xml:
        name: customer
    HistoryPoint:
      type: object
      properties:
        symbol:
          type: string
        date:
          type: string
          format: date-time
        closingPrice:
          type: number
      xml:
        name: historyPoint
        namespace: http://service.parabank.parasoft.com/
    Transaction:
      type: object
      properties:
        id:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int32
        type:
          type: string
          enum:
          - Credit
          - Debit
        date:
          type: string
          format: date-time
        amount:
          type: number
        description:
          type: string
      xml:
        name: transaction
    LoanResponse:
      required:
      - loanProviderName
      type: object
      properties:
        responseDate:
          type: string
          format: date-time
        loanProviderName:
          type: string
        approved:
          type: boolean
        message:
          type: string
        accountId:
          type: integer
          format: int32
      xml:
        name: loanResponse
        namespace: http://service.parabank.parasoft.com/
